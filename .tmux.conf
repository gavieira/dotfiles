#Reference: https://gist.github.com/spicycode/1229612
#Reference: https://github.com/luan/tmuxfiles/blob/master/tmux.conf
#-------- Copy Mode (Vim Style) {{{
#------------------------------------------------------
# This section of hotkeys mainly work in copy mode and no where else

# setting extended-keys
#set -s extended-keys on

# add mouse support
set -g mouse on
#set -g mouse off 

#bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# to enable mouse scroll, see https://github.com/tmux/tmux/issues/145#issuecomment-150736967
#bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

#Removing escape time (for a better vim experience)
set -sg escape-time 0

#Setting emacs for status keys (allows Esc to escape command prompt)
set-option -g status-keys emacs
set-window-option -g mode-keys emacs

## set the default TERM
set -g default-terminal 'screen-256color'

# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# remap splits 
#unbind s
#bind s split-window -v
#bind v split-window -h

# remaps switch session (choose-tree -Zs)
bind a choose-tree -Zs
#unbind c
#bind c choose-tree -Zs

# remap new-window
#unbind n
#bind n new-window

# pane movement similar to vim
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# Use Alt-vim keys without prefix key to switch panes
bind -n M-h select-pane -L
bind -n M-j select-pane -D 
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Use Alt-arrow keys without prefix key to switch panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Use Alt-f/z keys without prefix key to zoom
bind -n M-f resize-pane -Z
#bind -n M-z resize-pane -Z

# Use Alt-s/Enter/v keys without prefix key to split
bind -n M-s split-window -v -c "#{pane_current_path}" 
bind -n M-v split-window -h -c "#{pane_current_path}"
bind -n M-Enter split-window -h -c "#{pane_current_path}"
bind -n M-ç split-window -v -c "#{pane_current_path}"

# Use Alt+w keys without prefix key to create new window
bind -n M-w new-window -c "#{pane_current_path}"

# Use Alt+W keys without prefix key to close current window
bind -n M-W confirm-before -p "Kill current window (y/n)?" kill-window


# Use Alt+n keys without prefix key to create new session
bind -n M-N command-prompt -I "new-session -s "
bind -n M-n new-window -c "#{pane_current_path}"

# Use Alt+N keys without prefix key to kill current session and go to another
#bind -n M-N command-prompt -I "new-session -s "
#bind -n M-N confirm-before -p "Kill session '#S' (y/n)?" "run-shell 'tmux switch-client -n \\\; kill-session -t \"#S\"; tmux choose-tree -Zs'"

# Use Alt+n keys without prefix key to create new session
#bind -n M-n command-prompt -I "new-session -s "

# Use Alt-N keys without prefix key to kill session and go to another session
#bind -n M-N confirm-before -p "Kill session '#S' (y/n)?" "run-shell 'tmux switch-client -n \\\; kill-session -t \"#S\"; tmux choose-tree -Zs'"

# Use Alt-q keys without prefix key to kill current pane 
bind -n M-q kill-pane

# Use Alt-Q keys without prefix key to kill current session
#bind -n M-Q confirm-before -p "Kill session '#S' (y/n)?" kill-session

# Use Alt-Q keys without prefix key to kill session and go to another session
bind -n M-Q confirm-before -p "Kill session '#S' (y/n)?" "run-shell 'tmux switch-client -n \\\; kill-session -t \"#S\"; tmux choose-tree -Zs'"

# Use Alt-x keys without prefix key to kill session and go to another session
#bind -n M-x confirm-before -p "Kill session '#S' (y/n)?" "run-shell 'tmux switch-client -n \\\; kill-session -t \"#S\"; tmux choose-tree -Zs'"
#bind -n M-x "run-shell 'tmux switch-client -n \\\; kill-session -t \"#S\"; tmux choose-tree -Zs'"

# Use Alt-e keys without prefix key to change layout
bind -n M-e next-layout

# Use Alt+Space keys without prefix key to create new window
#bind -n M-Space new-window
bind -n M-m new-window -c "#{pane_current_path}"
bind -n M-M command-prompt -I "new-session -s "


# Use Alt-space keys without prefix key to go to next window
bind -n M-Space next-window
#bind -n M-m next-window 
#bind -n M-M previous-window 
#bind -n M-S-Space previous-window
#bind -n C-M-Space previous-window

# Ctrl-Alt-h/l to switch windows
#bind -n C-M-h  previous-window
#bind -n C-M-l next-window
bind -n M-H  previous-window
bind -n M-L next-window

# Alt-y/u to rotate windows
bind -n M-y rotate-window -D #Clockwise
bind -n M-u rotate-window #Counterclockwise

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# Control-Alt-hjkl  to resize panes
#bind -n M-H resize-pane -L 2
#bind -n M-J resize-pane -D 2
#bind -n M-K resize-pane -U 2
#bind -n M-L resize-pane -R 2
bind -n C-M-h resize-pane -L 2
bind -n C-M-j resize-pane -D 2
bind -n C-M-k resize-pane -U 2
bind -n C-M-l resize-pane -R 2

# Alt-a for switching sessions
bind -n M-a choose-tree -Zs

# Alt-d for detaching sessions
bind -n M-d detach-client

# Alt-] for entering copy-mode
bind -n M-] copy-mode
#bind -n M-Escape copy-mode
bind -n M-i copy-mode

# Alt-[ for pasting the buffer
bind -n M-[ paste-buffer
bind -n M-p paste-buffer

# Alt-numbers to go to specific windows
bind -n M-0 select-window -t :=0
bind -n M-1 select-window -t :=1
bind -n M-2 select-window -t :=2
bind -n M-3 select-window -t :=3
bind -n M-4 select-window -t :=4
bind -n M-5 select-window -t :=5
bind -n M-6 select-window -t :=6
bind -n M-7 select-window -t :=7
bind -n M-8 select-window -t :=8
bind -n M-9 select-window -t :=9

# Alt-r to rename window
bind -n M-r command-prompt -I "#W" "rename-window -- '%%'" 
#bind -n M-r command-prompt -I "" "rename-window -- '%%'" 

# Alt-R to rename session
bind -n M-R command-prompt -I "#S" "rename-session -- '%%'"
#bind -n M-R command-prompt -I "" "rename-session -- '%%'"

# Ctrl-Alt-r to reload config
bind -n C-M-r source-file /home/gabriel/.tmux.conf \; display-message "/home/gabriel/.tmux.conf reloaded"

# Alt-c to open command prompt
bind -n M-c command-prompt

# Alt-m to join-pane (not working that well)...
#bind -n M-M command-prompt -I "join-pane -s #I -t "

# vim keys in copy and choose mode
set-window-option -g mode-keys vi

# copying selection vim style
# http://jasonwryan.com/blog/2011/06/07/copy-and-paste-in-tmux/
# https://github.com/myfreeweb/dotfiles/blob/master/tmux.conf
#bind-key Escape copy-mode			# enter copy mode; default [
bind-key p paste-buffer				# paste; (default hotkey: ] )
bind-key P choose-buffer 			# tmux clipboard history
bind-key + delete-buffer \; display-message "Deleted current Tmux Clipboard History"

# Send To Tmux Clipboard or System Clipboard
bind-key < run-shell "tmux set-buffer -- \"$(xsel -o -b)\"" \; display-message "Copy To Tmux Clipboard"
bind-key > run-shell 'tmux show-buffer | xsel -i -b' \; display-message "Copy To System Clipboard"


# vim copy mode rebinds for (tmux 2.4+)

bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi V send-keys -X select-line
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "xclip -in -selection clipboard"
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

#}}}

#Quick edit and source of .tmux.conf
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"
bind-key M split-window -h "vim ~/.tmux.conf"

# count from 1
set -g base-index 1
set -g pane-base-index 1

# Notifying if other windows has activities
#setw -g monitor-activity on
set -g visual-activity on

# Status bar - mostly copied from 'https://gist.github.com/rajanand02/9407361' 
set -g status 'on'
#set -g status-position top
set -g status-bg 'colour235'
#set -g status-justify 'centre'
set -g status-left-length '100'
set -g status-right-length '100'
set -g message-style fg='colour222',bg='colour238'
set -g message-command-style fg='colour222',bg='colour238'
set -g pane-border-style fg='colour238'
set -g pane-active-border-style fg='colour154'
setw -g window-status-activity-style fg='colour154',bg='colour235',none
setw -g window-status-separator ''
setw -g window-status-style fg='colour121',bg='colour235',none
set -g status-left '#[fg=colour232,bg=colour154] #S #[fg=colour154,bg=colour235,nobold,nounderscore,noitalics]#[fg=colour154,bg=colour235] #(whoami) #[fg=colour235,bg=colour235,nobold,nounderscore,noitalics]' #status bar with user name
#set -g status-left '#[fg=colour232,bg=colour154] #S #[fg=colour154,bg=colour235,nobold,nounderscore,noitalics]' #status bar without user name
set -g status-right '#[fg=colour235,bg=colour235,nobold,nounderscore,noitalics]#[fg=colour121,bg=colour235] %H:%M  %a  %d-%m-%Y #[fg=colour238,bg=colour235,nobold,nounderscore,noitalics]#[fg=colour222,bg=colour238] #H #[fg=colour154,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour232,bg=colour154] #(rainbarf --battery --remaining --no-rgb) '
setw -g window-status-format '#[fg=colour235,bg=colour235,nobold,nounderscore,noitalics]#[default] #I  #W #[fg=colour235,bg=colour235,nobold,nounderscore,noitalics]'
setw -g window-status-current-format '#[fg=colour235,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour222,bg=colour238] #I  #W  #F #[fg=colour238,bg=colour235,nobold,nounderscore,noitalics]'

# don't rename windows automatically
set-option -g allow-rename off

# History
set -g history-limit 100000

#Powerline
#source "~/.vim/plugged/powerline/build/lib/powerline/bindings/tmux/powerline.conf"

### references
# https://www.youtube.com/watch?v=P8goLYv2vqs
# [Youtube Tmux Playlist](https://www.youtube.com/playlist?list=PL5BE1545D8486D66D)
