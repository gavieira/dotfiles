#!/bin/sh

#[Add script documentation here]

#Author: Gabriel Alves Vieira
#email: gabrieldeusdeth@gmail.com
#github: https://github.com/gavieira
#Date: [Add date here]

#Provide mpd's music directory (no trailing slash)
MUSIC_DIR=$HOME/Music

#Getting complete filepath:
FILEPATH=$(mpc current)


#mpc only returns a filepath if metadata (e.g. "Artist") is not available
#i.e. the outputs of `mpc current` and `mpc %file% current` can be different, though you can set a default format with the MPC_FORMAT variable
#If music is not a file or a url, this block will keep the title unmodified
#Useful for not messing with files with properly configured metadata
if [[ -f $MUSIC_DIR/$FILEPATH ]] || [[ $FILEPATH == https* ]];
then TITLE=$(basename "${FILEPATH%.*}"); #Shell expansion to remove file extension
else TITLE=$FILEPATH; #If not url or file, do not mess with title
fi

#Getting state of file (playing or paused)
STATE=$(mpc status %state%)
STATE=${STATE^^} #Getting uppercase

#Getting playback percentage of track
PERCENT=$(mpc status %percenttime%)

#Getting other indicators

#My playlists are always set to 'repeat'
#Thus, in hindsight, recovering the status of the 'repeat' parameter is not really useful to me, but I can always uncomment this section if that changes
#if [[ "$(mpc status %repeat%)" == "on" ]];
#then REPEAT='R';
#else REPEAT='-';
#fi

if [[ "$(mpc status %random%)" == "on" ]];
then SHUFFLE='S';
else SHUFFLE='-';
fi

if [[ "$(mpc status %single%)" == "on" ]];
then TRACK='T';
else TRACK='-';
fi

#Printing the statusline
echo "$STATE: $TITLE ($PERCENT) $REPEAT$SHUFFLE$TRACK";
