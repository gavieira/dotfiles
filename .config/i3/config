# This file has been auto-generated by i3-config-wizard(1). It will not be overwritten#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

#Setting vim keybindings
set $vimleft h
set $vimdown j
set $vimup k
set $vimright l

#Setting wallpaper dir:
set $wallpapers ~/.config/i3/wallpapers

#Setting default programs
set $terminal lxterminal
set $libreoffice_instance soffice
set $pomodoro pomotroid
set $references zotero
set $conference zoom
set $ide rstudio-bin
set $text emacs
set $email neomutt
set $browser brave
#set $browser qutebrowser
set $pdf zathura
#set $music clementine
#set $music cmus
set $music alacritty --class cmus -e cmus 
set $video smplayer
set $localhost "firefox -new-window http://localhost:8888/"
set $stream_watch "~/.config/stream_watch.sh"
set $goyabu_script "python ~/.config/goyabu_playlist.py $(xclip -o -selection clipboard)"
set $screenshot flameshot gui

#Setting monitors
set $monitor1 LVDS1
set $monitor2 VGA1
set $monitor3 HDMI1

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# use xbacklight to adjust screen brightness
bindsym XF86MonBrightnessUp exec xbacklight -inc 10 # increase screen brightness
bindsym XF86MonBrightnessDown exec xbacklight -dec 10 # decrease screen brightness

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# Start a terminal. Tries to use alacritty and gets default terminal if it fails
bindsym $mod+Return exec $terminal || termite || alacritty || i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill
bindsym $mod+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec --no-startup-id dmenu_run
# A more modern dmenu replacement is rofi:
#bindcode $mod+40 exec rofi -modi drun,run -show drun
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
#bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+$vimleft focus left
bindsym $mod+$vimdown focus down
bindsym $mod+$vimup focus up
bindsym $mod+$vimright focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+$vimleft move left
bindsym $mod+Shift+$vimdown move down
bindsym $mod+Shift+$vimup move up
bindsym $mod+Shift+$vimright move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+c split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
#bindsym $mod+Shift+space floating toggle


# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1:Work"
set $ws2 "2:Web"
set $ws3 "3:Docs"
set $ws4 "4:Vid"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10:Music"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
#bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym $vimleft resize shrink width 10 px or 10 ppt
        bindsym $vimup resize grow height 10 px or 10 ppt
        bindsym $vimdown resize shrink height 10 px or 10 ppt
        bindsym $vimright resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
	position top
	separator_symbol "|"
	workspace_buttons yes
	#tray_output primary
	strip_workspace_numbers no
	strip_workspace_name no
	#i3bar_command i3bar --transparency
        status_command i3status
}

##### CUSTOM WORKSPACE KEYBINDINGS #####

#bindsym $mod+Shift+m move scratchpad 
bindsym $mod+Mod1+space scratchpad show
bindsym $mod+Mod1+n scratchpad show
bindsym $mod+minus move scratchpad 
bindsym $mod+equal scratchpad show
#bindsym $mod+Shift+m scratchpad show

#bindsym $mod+m move scratchpad 
#bindsym $mod+n scratchpad show

#bindsym $mod+n move scratchpad 
bindsym $mod+m scratchpad show


# If window goes to floating, set its size and position (works only once)
#bindsym $mod+Control+space floating toggle ; [floating] resize set 480px 240px ; move position 885 540 

#ppt (percentage) works in more resolutions and puts the window more or less where it should be
#bindsym $mod+Shift+space floating toggle; sticky toggle; [floating] resize set 400 200; move absolute position 70ppt 70ppt
bindsym $mod+Shift+space floating toggle; sticky toggle; [floating] resize set 400px 200px; move absolute position 71ppt 70ppt

# sticky toggle to add/remove video from all workspaces
bindsym $mod+x sticky toggle

#Rebind the default floating toggle
bindsym $mod+Control+space floating toggle; move absolute position center


bindsym $mod+Control+Left move workspace to output left
bindsym $mod+Control+Right move workspace to output right
bindsym $mod+Control+$vimleft move workspace to output left
bindsym $mod+Control+$vimright move workspace to output right

bindsym $mod+Mod1+$vimleft move workspace to output left
bindsym $mod+Mod1+$vimright move workspace to output right

bindsym $mod+Mod1+$vimup workspace prev_on_output
bindsym $mod+Mod1+$vimdown workspace next_on_output

#Could remap these to do something else...
bindsym $mod+Control+$vimup workspace prev_on_output 
bindsym $mod+Control+$vimdown workspace next_on_output

bindsym $mod+g split toggle
#bindsym $mod+Shift+g layout splith
#bindsym $mod+Shift+v layout splitv
#bindsym $mod+t layout toggle splith splitv

##### ASSIGNING WORKSPACES TO MONITORS #####

workspace $ws1  output primary
workspace $ws2  output $monitor2 $monitor3
workspace $ws3  output $monitor2 $monitor3
workspace $ws4  output $monitor2 $monitor3
workspace $ws5  output primary $monitor2 $monitor3
#workspace $ws6  output primary $monitor2 $monitor3
#workspace $ws7  output primary $monitor2 $monitor3
#workspace $ws8  output primary $monitor2 $monitor3
#workspace $ws9  output primary $monitor2 $monitor3
workspace $ws10  output $monitor2 $monitor3


##### SETTING CUSTOM OPTIONS/KEYBINDINGS #####

# Floating windows

# Setting floating window maximum size
#floating_maximum_size 1280 x 720
floating_maximum_size 852 x 480


# Navigation

#Back and forth two workspaces
workspace_auto_back_and_forth yes #Pressing the workspace key twice will return to previous workspace
bindsym Shift+ccedilla workspace back_and_forth
bindsym $mod+ccedilla workspace back_and_forth

#bindsym $mod+Mod1+h focus output left
#bindsym $mod+Mod1+l focus output right

#Mouse won't warp to center of focused window
mouse_warping none


#Focus on window activation
#focus_on_window_activation smart

#Make urgent window keep its color by 1000ms after switching to workspace
#force_display_urgency_hint 1000 ms

# Applications

bindsym $mod+z exec $references
bindsym $mod+Shift+z exec $conference
bindsym $mod+b exec $browser
#bindsym $mod+p exec $pdf # Haven't been using this at all
bindsym $mod+Shift+m exec $music
#bindsym $mod+Shift+m exec $terminal -e $music; $ws10 #For pcs without alacritty
#bindsym $mod+Shift+n exec $video
bindsym $mod+t exec $text
bindsym $mod+i exec $ide
bindsym $mod+u exec $stream_watch
bindsym $mod+Shift+u exec $animeyabu_script
bindsym $mod+p exec $pomodoro
bindsym Print exec $screenshot

bindsym $mod+y exec $localhost
for_window [class="(?i)firefox" title="^Jupyter.*"] move to workspace $ws1, workspace $ws1


#### ASSIGNING APPS TO WORKSPACES ####
# The "(?i)" makes the interpretation of the app variables case-insensitive

assign [instance="(?i)$libreoffice_instance"] $ws1
assign [class="(?i)$conference"] $ws1
assign [class="(?i)RStudio"] $ws1
assign [class="(?i)$ide"] $ws1
#for_window [class="(?i)$ide"] focus 


assign [class="(?i)$browser"] $ws2
#for_window [class="(?i)$browser"] focus 

assign [class="(?i)firefox"] $ws2
for_window [class="(?i)firefox"] focus

# Opens zathura in ws3 and focus on the newly created window
assign [class="(?i)$references"] $ws3
#for_window [class="(?i)$pdf"] focus
#for_window [class="(?i)$pdf"] fullscreen

# Opens pdf in ws3 and focus on the newly created window
#assign [class="(?i)$pdf"] $ws3
#for_window [class="(?i)$pdf"] focus

assign [class="Mendeley Desktop"] $ws3
#for_window [class="Mendeley Desktop"] focus

assign [class="(?i)$music"] $ws10
for_window [class="(?i)$music"] focus 


assign [class="Alacritty" instance="cmus"] $ws10
#for_window [class="Alacritty" instance="cmus"] move scratchpad focus 

assign [class="(?i)$video"] $ws4
for_window [class="(?i)$video"] focus 


assign [class="mpv"] $ws4
#for_window [class="mpv"] focus
#for_window [class="mpv"] floating enable resize set 480px 240px move position 875 530
#for_window [class="mpv" floating] resize set 480px 240px #Only works once


assign [class="vlc"] $ws4

for_window [class="Spotify"] move to workspace $ws10, workspace $ws10

# Change title for all windows
for_window [class=".*"] title_format "<b>%title</b> | class=%class | instance=%instance"

###### SETTING STARTUP APPLICATIONS ######

#Monitors

#Monitor 2 - 1920x1080
exec_always xrandr --output $monitor1 --primary --mode 1366x768 --pos 0x0 --rotate normal --output DP1 --off --output $monitor3 --off --output $monitor2 --mode 1366x768 --pos 1366x0 --rotate normal --output VIRTUAL1 --off


#Monitor 3 - 1920x1080
exec_always xrandr --output $monitor1 --primary --mode 1366x768 --pos 0x0 --rotate normal --output DP1 --off --output $monitor3 --mode 1920x1080 --pos 1366x0 --rotate normal --output $monitor2 --off --output VIRTUAL1 --off

#Dropbox
exec --no-startup-id dropbox 

#email client (NOT WORKING)
#exec_always --no-startup-id 'alacritty --class $email -e $email'
#for_window [class='Alacritty' instance=$email] move scratchpad
#for_window [class='Alacritty' instance=$email] move to workspace $ws6


# For some reason, redshift is not working on Manjaro i3 #
# In order for it to work, a cronjob was created: https://askubuntu.com/questions/513294/why-i-cant-add-redshift-to-startup"
#exec --no-startup-id redhsift -O 3500
#exec --no-startup-id redhsift-gtk 
exec --no-startup-id systemctl --user start redshift-gtk.service

#Setting wallpapers permanetly (needs feh)
#Will randomly pick one image from the wallpapers directory
exec_always --no-startup-id feh --bg-scale --randomize $wallpapers/*

#Keep screen always on:
exec_always --no-startup-id xset s off && xset -dpms

#Add Menu and Caps_Lock keys to mod4 list (somehow Caps did not work with xmodmap)
exec --no-startup-id setxkbmap -option caps:super && xmodmap -e "keycode 135 = Super_L"


#Setting cmus to open automatically on system start
#exec --no-startup-id "alacritty --class cmus -e cmus" # It's a nice idea to have this command as an alias for cmus


# Media player controls for cmus
bindsym XF86AudioPlay exec "cmus-remote -u" 
# bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioNext exec "cmus-remote -n"
bindsym XF86AudioPrev exec "cmus-remote -r"


##### COLORS #####

#Obtained at https://thomashunter.name/i3-configurator/

# class                 border  backgr. text    indicator child_border

#client.focused          #4C7899 #50ABEF #FFFFFF #2E9EF4   #285577
#client.unfocused        #333333 #285577 #888888 #292D2E   #222222

#Exit mode for i3
mode "exit: [l]ogout, [r]eboot, [s]hutdown, [c]hange user" {

  bindsym l exec i3-msg exit

  bindsym r exec systemctl reboot

  bindsym s exec shutdown now

  bindsym c exec dm-tool switch-to-greeter 

  bindsym Escape mode "default"

  bindsym $mod+Shift+e mode "default"

  bindsym Return mode "default"
}

bindsym $mod+Shift+e mode "exit: [l]ogout, [r]eboot, [s]hutdown, [c]hange user"

#Vim mode that uses hjkl as arrow keys (needs xdotools):

set $vim_mode_enter xmodmap -e 'keycode 43 = Left' -e 'keycode 44 = Down' -e 'keycode 45 = Up' -e 'keycode 46 = Down'

set $vim_mode_exit xmodmap -e 'keycode 43 = h' -e 'keycode 44 = j' -e 'keycode 45 = k' -e 'keycode 46 = l'

 

mode "vim mode: h for left, j for down, k for up, l for right" {
	bindsym $mod+1 workspace number $ws1
	bindsym $mod+2 workspace number $ws2
	bindsym $mod+3 workspace number $ws3
	bindsym $mod+4 workspace number $ws4
	bindsym $mod+5 workspace number $ws5
	bindsym $mod+6 workspace number $ws6
	bindsym $mod+7 workspace number $ws7
	bindsym $mod+8 workspace number $ws8
	bindsym $mod+9 workspace number $ws9
	bindsym $mod+0 workspace number $ws10


   bindsym Escape mode "default"; exec $vim_mode_exit;

   bindsym $mod+Shift+v mode "default"; exec $vim_mode_exit;

}

bindsym $mod+Shift+v mode "vim mode: h for left, j for down, k for up, l for right"; exec $vim_mode_enter; 
